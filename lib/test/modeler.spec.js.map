{"version":3,"sources":["../../test/modeler.spec.js"],"names":["operations","http","require","restful","common","modeler","TestModel","create","fields","id","type","Number","default","title","String","content","methods","Object","assign","https","$test","instance","baseURL","describe","it","assert","exists","find","is","eventually","propertyVal","schame"],"mappings":";;AAAA;;;;AACA;;;;;;AACA,MAAMA,aAAa;AACfC,UAAMC,QAAQ,+BAAR,CADS;AAEfC,aAASD,QAAQ,kCAAR,CAFM;AAGfE,YAAQF,QAAQ,0BAAR;AAHO,CAAnB;;AAMA,MAAMG,UAAU,uBAAhB;AACA,MAAMC,YAAYD,QAAQE,MAAR,CAAe;AAC7BC,YAAQ;AACJC,YAAI,EAAEC,MAAMC,MAAR,EAAgBC,SAAS,IAAzB,EADA;AAEJC,eAAO,EAAEH,MAAMI,MAAR,EAAgBF,SAAS,EAAzB,EAFH;AAGJG,iBAAS,EAAEL,MAAMI,MAAR,EAAgBF,SAAS,EAAzB,EAHL;AAIJF,cAAM,EAAEA,MAAMI,MAAR,EAAgBF,SAAS,EAAzB;AAJF,KADqB;AAO7BI,aAASC,OAAOC,MAAP,CAAc,EAAd,EAAkBlB,WAAWmB,KAA7B,EAAoCnB,WAAWG,OAA/C,EAAwDH,WAAWI,MAAnE;AAPoB,CAAf,CAAlB;AASA,MAAMgB,QAAQ,IAAId,SAAJ,CAAc;AACxBe,cAAU,gBAAMd,MAAN,CAAa;AACnBe,iBAAS;AADU,KAAb;AADc,CAAd,CAAd;;AAMAC,SAAS,OAAT,EAAkB,YAAY;AAC1BA,aAAS,YAAT,EAAuB,YAAY;AAC/BC,WAAG,0BAAH,EAA+B,YAAY;AACvC,mBAAOC,OAAOC,MAAP,CAAcN,MAAMO,IAApB,EAA0B,gCAA1B,CAAP;AACH,SAFD;;AAIAC,WAAG,kBAAH,EAAuB,YAAY;AAC/B,mBAAOH,OAAOI,UAAP,CAAkBC,WAAlB,CAA8BV,MAAMW,MAAN,CAAa,CAAb,CAA9B,EAA+C,IAA/C,EAAqD,IAArD,CAAP;AACH,SAFD;;AAIAH,WAAG,gBAAH,EAAqB,YAAU;AAC3B,mBAAOH,OAAOI,UAAP,CAAkBC,WAAlB,CAA+BV,MAAMO,IAAN,CAAW,CAAX,CAA/B,EAA8C,IAA9C,EAAoD,CAApD,CAAP;AACH,SAFD;AAGH,KAZD;AAaH,CAdD","file":"modeler.spec.js","sourcesContent":["import Modeler from '../src/modeler.js';\r\nimport axios from 'axios';\r\nconst operations = {\r\n    http: require('../src/operations/HttpMethods'),\r\n    restful: require('../src/operations/RestfulMethods'),\r\n    common: require('../src/operations/common'),\r\n}\r\n\r\nconst modeler = new Modeler();\r\nconst TestModel = modeler.create({\r\n    fields: {\r\n        id: { type: Number, default: null },\r\n        title: { type: String, default: '' },\r\n        content: { type: String, default: '' },\r\n        type: { type: String, default: '' },\r\n    },\r\n    methods: Object.assign({}, operations.https, operations.restful, operations.common )\r\n});\r\nconst $test = new TestModel({\r\n    instance: axios.create({\r\n        baseURL: 'localhost:300/api'\r\n    })\r\n});\r\n\r\ndescribe('Array', function () {\r\n    describe('#indexOf()', function () {\r\n        it('use modeler create model', function () {\r\n            return assert.exists($test.find, '$test is not has find function');\r\n        });\r\n\r\n        is('$test use schame', function () {\r\n            return assert.eventually.propertyVal($test.schame(1), 'id', null);\r\n        })\r\n\r\n        is('$test use find', function(){\r\n            return assert.eventually.propertyVal( $test.find(1), 'id', 1);\r\n        })\r\n    });\r\n});"]}